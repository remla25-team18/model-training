name: ML Testing

on: push

jobs:
    test:
        runs-on: ubuntu-latest
        
        # Prevent running tests on pushes from GitHub Actions itself to avoid infinite loops
        if: github.actor != 'github-actions' 
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                token: ${{ secrets.GH_TOKEN }}
            
            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'

            - name: Install dependencies
              run: |
                pip install -e .[dev]
                pip install dvc dvc[gdrive]

            - name: Run DVC repro
              run: dvc repro    

            - name: Get GDrive Service Account Key
              run: |
                echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT }}" | base64 --decode > .dvc/tmp/gdrive_service_account.json

            - name: Run tests with pytest and coverage
              run: |
                pytest -v --cov=src --cov-report=xml --cov-report=term-missing tests/
                coverage-badge -o coverage.svg -f

            - name: Calculate ml test score
              id: score
              run: |
                score=`python tests/calculate_ml_test_score.py`
                echo "score=$score" >> $GITHUB_OUTPUT

            - name: Determine badge color
              id: color
              run: |
                score=${{ steps.score.outputs.score }}
                if [ "$score" -ge 2 ]; then
                  color="brightgreen"
                elif [ "$score" -ge 1 ]; then
                  color="yellow"
                else
                  color="red"
                fi
                echo "color=$color" >> $GITHUB_OUTPUT

            - name: Debug score
              run: echo "score ${{ steps.score.outputs.score }} and color ${{ steps.color.outputs.color }}"

            - name: Generate ML test score badge
              uses: emibcn/badge-action@v1
              with:
                label: 'ML Test Score'
                status: ${{ steps.score.outputs.score }}
                color: ${{ steps.color.outputs.color }}
                path: badge-ML-test-score.svg
            
            - name: Commit changes
              run: |
                git config user.name "github-actions"
                git config user.email "github-actions@github.com"

                git add coverage.svg badge-ML-test-score.svg
                
                if git diff --cached --quiet; then
                  echo "No changes to commit"
                else
                  git commit -m "Update coverage and ML test score badges [skip ci]"
                  git push origin HEAD:main
                fi

